apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    field.cattle.io/creatorId: u-tdmv2omtu4
    field.cattle.io/publicEndpoints: >-
      [{"addresses":["188.166.134.219"],"port":443,"protocol":"HTTPS","serviceName":"swabweb-test:nginx","ingressName":"swabweb-test:do-managed--softwarelse--se","hostname":"do-managed.softwarelse.se","allNodes":false},{"addresses":["188.166.134.219"],"port":443,"protocol":"HTTPS","serviceName":"swabweb-test:nginx","ingressName":"swabweb-test:test-softwarelse-se","hostname":"test.softwarelse.se","allNodes":false}]
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-swabweb-test-nginx
  name: nginx
  namespace: swabweb-test
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-swabweb-test-nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: >-
          [[{"containerPort":80,"dnsName":"nginx","kind":"ClusterIP","name":"http","protocol":"TCP","sourcePort":0}]]
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-swabweb-test-nginx
    spec:
      containers:
        - image: 'nginx:latest'
          imagePullPolicy: Always
          name: nginx
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /mnt/git-frontend-clone-dir
              name: git-frontend-clone-dir
            - mountPath: /mnt/git-backend-clone-dir
              name: git-backend-clone-dir
            - mountPath: /usr/share/nginx/html
              name: git-html-combined-dir
      dnsPolicy: ClusterFirst
      initContainers:
        - args:
            - /mnt/init/init
          command:
            - bash
          image: 'node:12'
          imagePullPolicy: Always
          name: clone-git-stuff
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /mnt/git-frontend-clone-dir
              name: git-frontend-clone-dir
            - mountPath: /mnt/git-backend-clone-dir
              name: git-backend-clone-dir
            - mountPath: /usr/share/nginx/html
              name: git-html-combined-dir
            - mountPath: /mnt/.ssh
              name: git-ssh-credentials
            - mountPath: /mnt/init
              name: init-script
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: git-frontend-clone-dir
        - emptyDir: {}
          name: git-backend-clone-dir
        - emptyDir: {}
          name: git-html-combined-dir
        - name: git-ssh-credentials
          secret:
            defaultMode: 448
            optional: false
            secretName: git-clone-credentials
        - configMap:
            defaultMode: 448
            name: swabweb-init-script
            optional: false
          name: init-script

